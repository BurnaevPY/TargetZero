// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TargetZero.Infrastructure.Postgres;

namespace TargetZero.Infrastructure.Postgres.Migrations
{
    [DbContext(typeof(TargetZeroContext))]
    [Migration("20211006144251_AddConsideration")]
    partial class AddConsideration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TargetZero.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TargetZero.Domain.Consideration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ConsiderationGroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("InnovationId")
                        .HasColumnType("integer");

                    b.Property<int?>("InnovationStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsiderationGroupId");

                    b.HasIndex("InnovationStatusId");

                    b.ToTable("Considerations");
                });

            modelBuilder.Entity("TargetZero.Domain.ConsiderationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConsiderationGroups");
                });

            modelBuilder.Entity("TargetZero.Domain.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Filials");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Name = "Общество"
                        },
                        new
                        {
                            Id = 9,
                            Name = "МРНУ"
                        },
                        new
                        {
                            Id = 10,
                            Name = "РРНУ"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ГРНУ"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ТНМ"
                        },
                        new
                        {
                            Id = 13,
                            Name = "БПТОиКО"
                        },
                        new
                        {
                            Id = 75,
                            Name = "ВРНПУ"
                        },
                        new
                        {
                            Id = 79,
                            Name = "ЦПА"
                        });
                });

            modelBuilder.Entity("TargetZero.Domain.Innovation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CurrentState")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("FilialId")
                        .HasColumnType("integer");

                    b.Property<int?>("InnovationStatusId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<string>("TargetState")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FilialId");

                    b.HasIndex("InnovationStatusId");

                    b.ToTable("Innovations");
                });

            modelBuilder.Entity("TargetZero.Domain.InnovationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InnovationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Рассмотрение",
                            Name = "Consideration"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Принято",
                            Name = "Accepted"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Отклонено",
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Уточнение",
                            Name = "Clarification"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Доработка",
                            Name = "Rework"
                        });
                });

            modelBuilder.Entity("TargetZero.Domain.Resolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ExecutionTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("InnovationId")
                        .HasColumnType("integer");

                    b.Property<int?>("InnovationStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InnovationId");

                    b.HasIndex("InnovationStatusId");

                    b.ToTable("Resolutions");
                });

            modelBuilder.Entity("TargetZero.Domain.Consideration", b =>
                {
                    b.HasOne("TargetZero.Domain.ConsiderationGroup", "ConsiderationGroup")
                        .WithMany()
                        .HasForeignKey("ConsiderationGroupId");

                    b.HasOne("TargetZero.Domain.InnovationStatus", "InnovationStatus")
                        .WithMany()
                        .HasForeignKey("InnovationStatusId");

                    b.Navigation("ConsiderationGroup");

                    b.Navigation("InnovationStatus");
                });

            modelBuilder.Entity("TargetZero.Domain.Innovation", b =>
                {
                    b.HasOne("TargetZero.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("TargetZero.Domain.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId");

                    b.HasOne("TargetZero.Domain.InnovationStatus", "InnovationStatus")
                        .WithMany()
                        .HasForeignKey("InnovationStatusId");

                    b.Navigation("Category");

                    b.Navigation("Filial");

                    b.Navigation("InnovationStatus");
                });

            modelBuilder.Entity("TargetZero.Domain.Resolution", b =>
                {
                    b.HasOne("TargetZero.Domain.Innovation", null)
                        .WithMany()
                        .HasForeignKey("InnovationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TargetZero.Domain.InnovationStatus", "InnovationStatus")
                        .WithMany()
                        .HasForeignKey("InnovationStatusId");

                    b.Navigation("InnovationStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
